@page "/fetchdata"

@using Bookshelved.Web.Data
@using Bookshelved.Services
@using Bookshelved.Core.DTOs
@inject WeatherForecastService ForecastService
@inject BookService BookService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Book ID</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in _books)
            {
                <tr>
                    <td>@book.ID</td>
                    <td>@book.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private IEnumerable<BookDTO> _books;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        _books = BookService.GetAll();
    }
}